1/1: Building Printf (Printf.idr)
Printf> [scheme] Printf> \i, i, i, i, i, i => with block in strInduction (with block in strInduction (with block in strInduction (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)) (strUncons (with block in strInduction (prim__cast_IntString i) (strUncons (prim__cast_IntString i)) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i))) (\arg => String) (\c, s, res => prim__strCons c res) (prim__cast_IntString i)
[scheme] Printf> Bye for now!
