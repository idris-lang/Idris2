1/1: Building Issue1831_1 (Issue1831_1.idr)
Issue1831_1> Issue1831_1.test2 ==> [{arg:0}];
Compile time tree: case {arg:0}[0] : [__] of
 { Prelude.Types.S {e:0} => case {e:0}[0] : [__] of
   { Prelude.Types.S {e:1} => case {e:1}[0] : [__] of
     { Prelude.Types.Z => [0] Prelude.Basics.True
     | _ => [0] Prelude.Basics.False
     }
   | _ => [0] Prelude.Basics.False
   }
 | _ => [0] Prelude.Basics.False
 }
Run time tree: Error: ""
RigW
Erasable args: []
Detaggable arg types: []
Specialise args: []
Inferrable args: []
Compiled: [{arg:0}]: (%case !{arg:0} [(%constcase 0 0)] Just (%let {e:0} (-Integer [!{arg:0}, 1]) (%case !{e:0} [(%constcase 0 0)] Just (%let {e:1} (-Integer [!{e:0}, 1]) (%case !{e:1} [(%constcase 0 1)] Just 0)))))
Refers to: [Prelude.Basics.True, Prelude.Basics.False]
Refers to (runtime): []
Flags: [allguarded, covering]
Issue1831_1> 
Bye for now!
1/1: Building Issue1831_2 (Issue1831_2.idr)
Issue1831_2> Issue1831_2.test2 ==> [{arg:0}];
Compile time tree: case {arg:0}[0] : [__] of
 { Prelude.Types.S {e:0} => case {e:0}[0] : [__] of
   { Prelude.Types.S {e:1} => case {e:1}[0] : [__] of
     { Prelude.Types.Z => [0] Prelude.Basics.True
     | _ => [0] Prelude.Basics.False
     }
   | _ => [0] Prelude.Basics.False
   }
 | _ => [0] Prelude.Basics.False
 }
Run time tree: Error: ""
RigW
Erasable args: []
Detaggable arg types: []
Specialise args: []
Inferrable args: []
Compiled: [{arg:0}]: (%case !{arg:0} [(%constcase 0 0)] Just (%let {e:0} (-Integer [!{arg:0}, 1]) (%case !{e:0} [(%constcase 0 0)] Just (%let {e:1} (-Integer [!{e:0}, 1]) (%case !{e:1} [(%constcase 0 1)] Just 0)))))
Refers to: [Prelude.Basics.True, Prelude.Basics.False]
Refers to (runtime): []
Flags: [allguarded, covering]
Issue1831_2> 
Bye for now!
